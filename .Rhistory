scale_fill_manual(name = segment_string, values = color_list) +
theme_clean()
ggarrange(A, B,
labels = c("A", "B"),
ncol = 1, nrow = 2)
}
deaths_per_geo(segment = "Region")
deaths_per_geo(segment = Region)
deaths_per_geo(segment = Region)
addNewDeathsMetric <- function(segment) {
newDeaths <- death1 %>%
select({{segment}}, Date, confirmedDeaths) %>%
group_by({{segment}}, Date) %>%
summarise(totalDeaths = sum(confirmedDeaths)) %>%
mutate(newConfirmedDeaths = totalDeaths - lag(totalDeaths)) %>%
mutate(newConfirmedDeaths = ifelse(newConfirmedDeaths < 0, 0, newConfirmedDeaths))
return(newDeaths)
}
deaths_per_geo <- function(segment) {
segment_string = deparse(substitute(segment))
if(segment_string == "Region") {
# Caculate daily NEW deaths per region
df <- addNewDeathsMetric(segment = segment)
# Relevel the regions to get a nicer graph
df$Region %<>%
fct_relevel(
"Oceania",
"Africa",
"Asia",
"Americas",
"Europe")
color_list = c("Asia" = "seagreen3",
"Africa" = "goldenrod3",
"Europe" = "steelblue4",
"Americas" = "coral2",
"Oceania" = "palevioletred3")
}
else if(segment_string == "subRegion") {
listSubRegions <-
c("Western Europe",
"Southern Europe",
"Northern Europe",
"Northern America",
"South-eastern Asia",
"Southern Asia",
"Western Asia",
"Eastern Asia")
# Caculate daily NEW deaths per region
df <- addNewDeathsMetric(segment = segment)
df %<>%
filter(subRegion %in% listSubRegions)
# Relevel the regions to get a nicer graph
df$subRegion %<>%
fct_relevel(
"Eastern Asia",
"Western Asia",
"South-eastern Asia",
"Southern Asia",
"Northern America",
"Northern Europe",
"Western Europe",
"Southern Europe")
color_list = c("Eastern Asia" = "seagreen3",
"Western Asia" = "goldenrod3",
"South-eastern Asia" = "steelblue4",
"Southern Asia" = "coral2",
"Northern America" = "steelblue2",
"Northern Europe" = "palevioletred3",
"Western Europe" = "goldenrod1",
"Southern Europe" = "lightsalmon2")
}
else {
stop("Unacceptable segment input. Change to either 'Region' or 'subRegion'.")
}
par(mfrow=c(1,2))
# And plot
A <- ggplot(data=df,
aes(x=Date,
y=newConfirmedDeaths)) +
geom_col(aes(fill = segment_string)) +
labs(title = "New deaths per region",
y = "New confirmed deaths") +
scale_fill_manual(name = segment_string, values = color_list) +
theme_clean()
B <- ggplot(data=df,
aes(x=Date,
y=newConfirmedDeaths)) +
geom_col(position = "fill", stat = "identity", aes(fill = segment_string)) +
labs(title = "Share of deaths per region",
x = "Date",
y = "Share of new confirmed deaths",
caption = "Source: John Hopkins Coronavirus Resource Center") +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(name = segment_string, values = color_list) +
theme_clean()
ggarrange(A, B,
labels = c("A", "B"),
ncol = 1, nrow = 2)
}
deaths_per_geo(segment = Region)
deaths_per_geo <- function(segment) {
segment_string <- deparse(substitute(segment))
if(segment_string == "Region") {
# Caculate daily NEW deaths per region
df <- addNewDeathsMetric(segment = segment)
# Relevel the regions to get a nicer graph
df$Region %<>%
fct_relevel(
"Oceania",
"Africa",
"Asia",
"Americas",
"Europe")
color_list = c("Asia" = "seagreen3",
"Africa" = "goldenrod3",
"Europe" = "steelblue4",
"Americas" = "coral2",
"Oceania" = "palevioletred3")
}
else if(segment_string == "subRegion") {
listSubRegions <-
c("Western Europe",
"Southern Europe",
"Northern Europe",
"Northern America",
"South-eastern Asia",
"Southern Asia",
"Western Asia",
"Eastern Asia")
# Caculate daily NEW deaths per region
df <- addNewDeathsMetric(segment = segment)
df %<>%
filter(subRegion %in% listSubRegions)
# Relevel the regions to get a nicer graph
df$subRegion %<>%
fct_relevel(
"Eastern Asia",
"Western Asia",
"South-eastern Asia",
"Southern Asia",
"Northern America",
"Northern Europe",
"Western Europe",
"Southern Europe")
color_list = c("Eastern Asia" = "seagreen3",
"Western Asia" = "goldenrod3",
"South-eastern Asia" = "steelblue4",
"Southern Asia" = "coral2",
"Northern America" = "steelblue2",
"Northern Europe" = "palevioletred3",
"Western Europe" = "goldenrod1",
"Southern Europe" = "lightsalmon2")
}
else {
stop("Unacceptable segment input. Change to either 'Region' or 'subRegion'.")
}
par(mfrow=c(1,2))
# And plot
A <- ggplot(data=df,
aes(x=Date,
y=newConfirmedDeaths)) +
geom_col(aes(fill = segment_string)) +
labs(title = "New deaths per region",
y = "New confirmed deaths") +
scale_fill_manual(name = segment_string, values = color_list) +
theme_clean()
B <- ggplot(data=df,
aes(x=Date,
y=newConfirmedDeaths)) +
geom_col(position = "fill", stat = "identity", aes(fill = segment_string)) +
labs(title = "Share of deaths per region",
x = "Date",
y = "Share of new confirmed deaths",
caption = "Source: John Hopkins Coronavirus Resource Center") +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(name = segment_string, values = color_list) +
theme_clean()
ggarrange(A, B,
labels = c("A", "B"),
ncol = 1, nrow = 2)
}
deaths_per_geo(segment = Region)
deaths_per_geo <- function(segment) {
test <- segment
segment_string <- deparse(substitute(test))
if(segment_string == "Region") {
# Caculate daily NEW deaths per region
df <- addNewDeathsMetric(segment = segment)
# Relevel the regions to get a nicer graph
df$Region %<>%
fct_relevel(
"Oceania",
"Africa",
"Asia",
"Americas",
"Europe")
color_list = c("Asia" = "seagreen3",
"Africa" = "goldenrod3",
"Europe" = "steelblue4",
"Americas" = "coral2",
"Oceania" = "palevioletred3")
}
else if(segment_string == "subRegion") {
listSubRegions <-
c("Western Europe",
"Southern Europe",
"Northern Europe",
"Northern America",
"South-eastern Asia",
"Southern Asia",
"Western Asia",
"Eastern Asia")
# Caculate daily NEW deaths per region
df <- addNewDeathsMetric(segment = segment)
df %<>%
filter(subRegion %in% listSubRegions)
# Relevel the regions to get a nicer graph
df$subRegion %<>%
fct_relevel(
"Eastern Asia",
"Western Asia",
"South-eastern Asia",
"Southern Asia",
"Northern America",
"Northern Europe",
"Western Europe",
"Southern Europe")
color_list = c("Eastern Asia" = "seagreen3",
"Western Asia" = "goldenrod3",
"South-eastern Asia" = "steelblue4",
"Southern Asia" = "coral2",
"Northern America" = "steelblue2",
"Northern Europe" = "palevioletred3",
"Western Europe" = "goldenrod1",
"Southern Europe" = "lightsalmon2")
}
else {
stop("Unacceptable segment input. Change to either 'Region' or 'subRegion'.")
}
par(mfrow=c(1,2))
# And plot
A <- ggplot(data=df,
aes(x=Date,
y=newConfirmedDeaths)) +
geom_col(aes(fill = segment_string)) +
labs(title = "New deaths per region",
y = "New confirmed deaths") +
scale_fill_manual(name = segment_string, values = color_list) +
theme_clean()
B <- ggplot(data=df,
aes(x=Date,
y=newConfirmedDeaths)) +
geom_col(position = "fill", stat = "identity", aes(fill = segment_string)) +
labs(title = "Share of deaths per region",
x = "Date",
y = "Share of new confirmed deaths",
caption = "Source: John Hopkins Coronavirus Resource Center") +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(name = segment_string, values = color_list) +
theme_clean()
ggarrange(A, B,
labels = c("A", "B"),
ncol = 1, nrow = 2)
}
deaths_per_geo(segment = Region)
deaths_per_geo <- function(segment) {
segment_string <- deparse(substitute(segment))
if(segment_string == "Region") {
# Caculate daily NEW deaths per region
df <- addNewDeathsMetric(segment = segment)
# Relevel the regions to get a nicer graph
df$Region %<>%
fct_relevel(
"Oceania",
"Africa",
"Asia",
"Americas",
"Europe")
color_list = c("Asia" = "seagreen3",
"Africa" = "goldenrod3",
"Europe" = "steelblue4",
"Americas" = "coral2",
"Oceania" = "palevioletred3")
}
else if(segment_string == "subRegion") {
listSubRegions <-
c("Western Europe",
"Southern Europe",
"Northern Europe",
"Northern America",
"South-eastern Asia",
"Southern Asia",
"Western Asia",
"Eastern Asia")
# Caculate daily NEW deaths per region
df <- addNewDeathsMetric(segment = segment)
df %<>%
filter(subRegion %in% listSubRegions)
# Relevel the regions to get a nicer graph
df$subRegion %<>%
fct_relevel(
"Eastern Asia",
"Western Asia",
"South-eastern Asia",
"Southern Asia",
"Northern America",
"Northern Europe",
"Western Europe",
"Southern Europe")
color_list = c("Eastern Asia" = "seagreen3",
"Western Asia" = "goldenrod3",
"South-eastern Asia" = "steelblue4",
"Southern Asia" = "coral2",
"Northern America" = "steelblue2",
"Northern Europe" = "palevioletred3",
"Western Europe" = "goldenrod1",
"Southern Europe" = "lightsalmon2")
}
else {
stop("Unacceptable segment input. Change to either 'Region' or 'subRegion'.")
}
par(mfrow=c(1,2))
# And plot
A <- ggplot(data=df,
aes(x=Date,
y=newConfirmedDeaths)) +
geom_col(aes(fill = segment_string)) +
labs(title = "New deaths per region",
y = "New confirmed deaths") +
scale_fill_manual(name = segment_string, values = color_list) +
theme_clean()
B <- ggplot(data=df,
aes(x=Date,
y=newConfirmedDeaths)) +
geom_col(position = "fill", stat = "identity", aes(fill = segment_string)) +
labs(title = "Share of deaths per region",
x = "Date",
y = "Share of new confirmed deaths",
caption = "Source: John Hopkins Coronavirus Resource Center") +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(name = segment_string, values = color_list) +
theme_clean()
ggarrange(A, B,
labels = c("A", "B"),
ncol = 1, nrow = 2)
}
deaths_per_geo(segment = Region)
addNewDeathsMetric(segment = Region)
deaths_per_geo <- function(segment) {
segment_string <- deparse(quote(segment))
if(segment_string == "Region") {
# Caculate daily NEW deaths per region
df <- addNewDeathsMetric(segment = segment)
# Relevel the regions to get a nicer graph
df$Region %<>%
fct_relevel(
"Oceania",
"Africa",
"Asia",
"Americas",
"Europe")
color_list = c("Asia" = "seagreen3",
"Africa" = "goldenrod3",
"Europe" = "steelblue4",
"Americas" = "coral2",
"Oceania" = "palevioletred3")
}
else if(segment_string == "subRegion") {
listSubRegions <-
c("Western Europe",
"Southern Europe",
"Northern Europe",
"Northern America",
"South-eastern Asia",
"Southern Asia",
"Western Asia",
"Eastern Asia")
# Caculate daily NEW deaths per region
df <- addNewDeathsMetric(segment = segment)
df %<>%
filter(subRegion %in% listSubRegions)
# Relevel the regions to get a nicer graph
df$subRegion %<>%
fct_relevel(
"Eastern Asia",
"Western Asia",
"South-eastern Asia",
"Southern Asia",
"Northern America",
"Northern Europe",
"Western Europe",
"Southern Europe")
color_list = c("Eastern Asia" = "seagreen3",
"Western Asia" = "goldenrod3",
"South-eastern Asia" = "steelblue4",
"Southern Asia" = "coral2",
"Northern America" = "steelblue2",
"Northern Europe" = "palevioletred3",
"Western Europe" = "goldenrod1",
"Southern Europe" = "lightsalmon2")
}
else {
stop("Unacceptable segment input. Change to either 'Region' or 'subRegion'.")
}
par(mfrow=c(1,2))
# And plot
A <- ggplot(data=df,
aes(x=Date,
y=newConfirmedDeaths)) +
geom_col(aes(fill = segment_string)) +
labs(title = "New deaths per region",
y = "New confirmed deaths") +
scale_fill_manual(name = segment_string, values = color_list) +
theme_clean()
B <- ggplot(data=df,
aes(x=Date,
y=newConfirmedDeaths)) +
geom_col(position = "fill", stat = "identity", aes(fill = segment_string)) +
labs(title = "Share of deaths per region",
x = "Date",
y = "Share of new confirmed deaths",
caption = "Source: John Hopkins Coronavirus Resource Center") +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(name = segment_string, values = color_list) +
theme_clean()
ggarrange(A, B,
labels = c("A", "B"),
ncol = 1, nrow = 2)
}
deaths_per_geo(segment = Region)
deaths_per_geo <- function(segment) {
segment_string <- deparse(substitute(segment))
if(segment_string == "Region") {
# Caculate daily NEW deaths per region
df <- addNewDeathsMetric(segment = segment)
# Relevel the regions to get a nicer graph
df$Region %<>%
fct_relevel(
"Oceania",
"Africa",
"Asia",
"Americas",
"Europe")
color_list = c("Asia" = "seagreen3",
"Africa" = "goldenrod3",
"Europe" = "steelblue4",
"Americas" = "coral2",
"Oceania" = "palevioletred3")
}
else if(segment_string == "subRegion") {
listSubRegions <-
c("Western Europe",
"Southern Europe",
"Northern Europe",
"Northern America",
"South-eastern Asia",
"Southern Asia",
"Western Asia",
"Eastern Asia")
# Caculate daily NEW deaths per region
df <- addNewDeathsMetric(segment = segment)
df %<>%
filter(subRegion %in% listSubRegions)
# Relevel the regions to get a nicer graph
df$subRegion %<>%
fct_relevel(
"Eastern Asia",
"Western Asia",
"South-eastern Asia",
"Southern Asia",
"Northern America",
"Northern Europe",
"Western Europe",
"Southern Europe")
color_list = c("Eastern Asia" = "seagreen3",
"Western Asia" = "goldenrod3",
"South-eastern Asia" = "steelblue4",
"Southern Asia" = "coral2",
"Northern America" = "steelblue2",
"Northern Europe" = "palevioletred3",
"Western Europe" = "goldenrod1",
"Southern Europe" = "lightsalmon2")
}
else {
stop("Unacceptable input. Change to either 'Region' or 'subRegion'.")
}
par(mfrow=c(1,2))
# And plot
A <- ggplot(data=df,
aes(x=Date,
y=newConfirmedDeaths)) +
geom_col(aes(fill = segment_string)) +
labs(title = "New deaths per region",
y = "New confirmed deaths") +
scale_fill_manual(name = segment_string, values = color_list) +
theme_clean()
B <- ggplot(data=df,
aes(x=Date,
y=newConfirmedDeaths)) +
geom_col(position = "fill", stat = "identity", aes(fill = segment_string)) +
labs(title = "Share of deaths per region",
x = "Date",
y = "Share of new confirmed deaths",
caption = "Source: John Hopkins Coronavirus Resource Center") +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(name = segment_string, values = color_list) +
theme_clean()
ggarrange(A, B,
labels = c("A", "B"),
ncol = 1, nrow = 2)
}
deaths_per_geo(segment = Region)
